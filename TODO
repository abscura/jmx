- expose a complete DOM implementation so that processing.js can be used
- provide a javascript event-driven api for entities producing frames or responding to controller-events
- Javascript console
- fix the hit-test 
  * apart working a bit badly, when there are multiple connections for the same "input" pin,
    it always takes the first connector instead of selecting the clicked one 
- improve gui performances
- allow to change entity names from the GUI (it used to work ... but not anymore)
- allow to provide input values (of any supported type) through the GUI
  * multiline-text, size and point are missing and REALLY important *
- input controllers (at least keyboard and mouse ... but we need to support also midi/osc controllers)
- implement an HTTP (evented i/o) framework exposed to V8
- improve JMXTextRenderer (it now uses CVPixelBuffers ... should use a CGLayer instead)
- allow to create input pins (registering receiver-callbacks) from javascript
- implement exporters (file save and streaming)
- improve (and finish implementing) VJXAudioMixer
- allow to group 'diagrams' from the GUI and to access such groups as a sort of 'macro' in other diagrams
- build a notification framework to be used in the javascript context
- use an NSOperationQueue for notifications in the javascript context
- write a kernel extension to export video mixers as video-input-devices
- write a kernel extension to export audio mixers as audio-input/output-devices
- import openCV to implement core entities for image-analysis
- try getting rid of NSTimers and check if there is any other framework/approach 
  to use as clock source (probably something coreaudio/corevideo related)
